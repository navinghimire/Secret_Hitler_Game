*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Montserrat Alternates', sans-serif;
}

:root {
    --radius: .5em;
    --gap: 0.4em;
    --blue: #3ACBFB;
    --red: #e25f5f;
    --light-blue: #CCCCE8;
    --secondary-blue: #9A9AC1;
    --hline-size: 0.4em;
    --dark-shade: #000000;
    --blue-fluoro: #0CADF2;
    --green-fluoro: #0CF268;
    --blue-jewel: #2192C2;
    --green-jewel: #21C261;
    --red-jewel: #C22121;
    --brown-jewel: #C26E21;
    --red-fluoro: #F20C0C;
    --brown-fluoro: #F27B0C;
    --blue-pastel: #C3D9E3;
    --green-pastel: #C3E3D0;
    --red-pastel: #E3C3C3;
    --brown-pastel: #E3D2C3;
    --blue-neutral: #A1ADB2;
    --green-neutral: #A1B2A8;
    --red-neutral: #B2A1A1;
    --brown-neutral: #B2A9A1;
    --blue-earth: #406C80;
    --green-earth: #408059;
    --red-earth: #804040;
    --brown-earth: #805E40;
    --mid-shade: #808080;
    --light-shade: #FFFFFF;
    --card-height: 0em;
}

html {
    /* background-image: linear-gradient(to top, var(--red-jewel) 0%, var(--blue-jewel) 100%); */
    background-color: var(--red-earth);
}

.actionSection {
    display: flex;
    justify-content: space-around;
    text-align: center;
    position: relative;
    height: auto;
    flex-direction: column;
}

.maincontainer {
    display: flex;
    justify-content: center;
    align-items: center;
}

.article {
    margin: 1em;
    height: 150px;
    width: 120px;
    position: relative;
    background: linear-gradient(to top, var(--brown-jewel), var(--brown-earth));
    border-radius: var(--radius);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: .7em;
    pointer-events: auto;
    transform-style: preserve-3d;
    transition: transform 1s;
    -webkit-transform-style: preserve-3d;
    -webkit-transition: transform 1s;
    -o-transform-style: preserve-3d;
    -o-transition: transform 1s;
    -moz-transform-style: preserve-3d;
    -moz-transition: transform 1s;
}

.article.show {
    transform: rotateY(180deg);
    -moz-transform: rotateY(180deg);
    -webkit-transform: rotateY(180deg);
    -o-transform: rotateY(180deg);
}

.article:hover {
    cursor: pointer;
}

.article h2 {
    padding-top: .1em;
    font-size: .9rem;
}

.front {
    justify-content: flex-start;
    width: 100%;
    height: 100%;
    padding: .8em;
    text-align: left;
    background-size: 80%;
    background-repeat: no-repeat;
    background-position: left 1em bottom 2.4em;
    z-index: 1;
    transform: rotateY(180deg);
    -moz-transform: rotateY(180deg);
    -webkit-transform: rotateY(180deg);
    -o-transform: rotateY(180deg);
    backface-visibility: hidden;
    -moz-backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    -o-backface-visibility: hidden;
}

.back {
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    background: linear-gradient(to top, var(--brown-jewel), var(--brown-earth));
    color: var(--brown-pastel);
    z-index: 2;
    backface-visibility: hidden;
    -moz-backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    -o-backface-visibility: hidden;
}

.back>h1 {
    opacity: 0.3;
}

.front,
.back {
    display: flex;
    flex-direction: column;
    position: absolute;
    border-radius: var(--radius);
}

.liberal>.front {
    color: var(--blue-pastel);
}

.fascist>.front {
    color: var(--red-pastel);
}

.article.fascist {
    background: linear-gradient(to top, var(--red-jewel), var(--red-earth));
}

.article.liberal {
    background: linear-gradient(to top, var(--blue-jewel), var(--blue-earth));
}

.containermain>.container,
.front,
.back {
    pointer-events: none;
}

.container:hover .article {
    transform: rotateY(180deg);
    -webkit-transform: rotateY(180deg);
}

.article>.front>img {
    opacity: .2;
}

.policies {
    margin: .2em;
}

.policies .front {
    transform: rotateY(0deg);
}

.policies .container:hover .article {
    transform: none;
}

.policies .article {
    /* width: 100%; */
    width: auto;
    height: 100px;
    margin: 0;
    background-size: stretch;
}

.policies .article .front {
    width: 100%;
    overflow: hidden;
}

.policies .article .front img.power {
    background-size: 70%;
    opacity: .5;
    position: absolute;
    height: 6em;
    left: 50%;
    top: 50%;
    transform: translate(-3em, -3em);
}

.article.fascist.passed .front img.power {
    opacity: 0;
}

.article .front img {
    height: auto;
    object-fit: cover;
}

.policies .article .front h1 {
    font-size: 1.2em;
}

.policies .article .front h2 {
    font-size: 1.2em;
    font-weight: 300;
}

.policy .liberal>h1,
.policy .fascist>h1 {
    padding: .5em;
    font-weight: 400;
    border-radius: var(--radius);
}

.policy .liberal>h1 {
    background-color: var(--blue-jewel);
}

.policy .fascist>h1 {
    background-color: var(--red-jewel);
}

.policy .liberal>h1>span,
.policy .fascist>h1>span {
    float: right;
}

.policies {
    display: grid;
    grid-template-columns: 1fr repeat(5, 1fr);
    gap: .2em;
}

.policies .article:not(.passed) .front {}

.policies .article:not(.passed) h1 {
    opacity: 0;
}

.policies .article:not(.passed)>.front>img:not(.power) {
    opacity: 0;
}

.policies .article:not(.passed) h2 {
    opacity: 0;
}

.policies .article:not(.passed) {
    background: none;
    /* opacity: .2; */
    border: dashed 1px black;
}

.wrapper {
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.avatar {
    z-index: -1;
    display: flex;
    justify-content: center;
    align-items: center;
    height: inherit;
    width: inherit;
    position: relative;
    /* border: 2px dotted purple ; */
    display: flex;
    opacity: .4;
    overflow: hidden;
    /* border: solid red; */
}

.cloth {
    position: absolute;
    /* border: solid red; */
    transform: scale(.25);
    bottom: -50px;
}

.head {
    transform: scale(.25);
    position: absolute;
    /* border: solid white; */
    top: 10;
}

.avatar img {
    /* max-width: 100%;
    max-height: 100%; */
    display: block;
    /* filter:sepia(85%) saturate(525%) hue-rotate(169deg) brightness(106%) contrast(90%); */
    object-fit: contain;
}

.player-self .avatar .cloth,
.player-self .avatar .head {
    transform: scale(.5);
    /* border: solid red; */
}

.hide {
    display: none;
}

.show {
    display: block;
}

body {
    overscroll-behavior: contain;
    min-height: 100vh;
    width: 100%;
    height: 100%;
    color: white;
    background-size: cover;
    background-repeat: no-repeat;
}

.hitler {
    background: linear-gradient(to top left, var(--red-jewel), var(--red-earth)) !important;
}

.test {
    display: flex;
    flex-direction: column;
    margin: 1em;
}

.test>button {
    padding: 1em;
    margin-bottom: 1em;
    border-radius: var(--radius);
    border: none;
    background-color: var(--green-pastel);
    color: var(--green-earth);
    font-weight: 500;
    font-family: Arial, Helvetica, sans-serif;
    cursor: pointer;
}

.gameCountdown {
    background-color: rgba(102, 192, 50, 0.699);
    position: absolute;
    height: 100%;
    width: 100%;
    z-index: 3;
    backdrop-filter: blur(2px);
    -webkit-backdrop-filter: blur(2px);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    display: none;
}

.drawDiscard {
    display: flex;
    justify-content: space-around;
    flex-direction: row;
}

.gameover {
    text-align: center;
    padding: 2em;
}

.gameover.fascist {
    background-color: var(--red-jewel);
    color: var(--red-pastel);
}

.gameover.liberal {
    background-color: var(--blue-jewel);
    color: var(--blue-pastel);
}

.gameover h1 {
    font-size: 40px;
}

.gameover>h2 {
    font-size: 20px;
}

main {
    position: relative;
    height: 100vh;
}

.info {
    display: flex;
    color: var(--brown-earth);
    justify-content: space-around;
    align-items: center;
    text-align: left;
    border-radius: var(--radius);
    position: absolute;
    bottom: 1em;
    right: 1em;
    left: 1em;
    overflow: hidden;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    padding: 1em;
}

.info>.message {
    font-size: .9em;
    min-width: 80%;
}

.info img {
    padding: .2em;
}

.info.can-start::before {
    content: '';
    display: none;
}

.info.can-start {
    background: (var(--red-jewel));
    color: var(--red-earth);
    animation: twinkle 500ms ease-in-out infinite alternate!important;
}

.info:not(.can-start) {
    background: linear-gradient(to left, var(--brown-pastel), var(--brown-neutral)) !important;
    color: var(--brown-earth);
    font-weight: 600;
}



@keyframes twinkle {
    from {
        background: var(--green-jewel);
    }
    to {
        background: var(--green-pastel);
    }
}

.info-code>p {
    font-size: .8em;
}

.info-code {
    display: flex;
    flex-direction: column;
    min-width: 50%;
}

.info-code>h1 {
    color: var(--6);
    /* padding-left: .2em; */
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

.info>button {
    border: none;
    height: 100%;
    width: 20%;
    opacity: .8;
    z-index: 2;
    background: transparent;
}

.info>button:hover {
    box-shadow: none;
    cursor: pointer;
}

.info::after {
    content: '';
    position: absolute;
    height: 2em;
    right: -3em;
    border: solid 10px var(--blue-jewel);
    transform: rotate(-75deg);
    opacity: .1;
}

main {
    position: relative;
    flex-direction: column;
}

section {
    width: auto;
}

.bgSvg {
    position: absolute;
    opacity: .8;
}

#stability {
    top: 2em;
    left: calc(50%-2.5em);
}

#chaos {
    bottom: 2em;
    right: calc(50%-2.5em);
}

#chaos,
#stability {
    pointer-events: none;
}

.input button {
    border: none;
}

#frmHost button {}

.input button:disabled {
    opacity: .1;
    display: none;
}

.input button:hover {
    background-color: var(--light-blue);
    transition: 0.2s ease-in-out;
}

#or {
    padding: 2em 0em;
}

#or h1 {
    font-weight: 100;
    font-size: 3em;
}

.input input {
    background-color: white;
    color: var(--secondary-blue);
    text-decoration: none;
    border: none;
    max-height: 2em;
    text-align: center;
    outline: none;
}

.input input::placeholder {
    color: var(--light-blue);
    font-weight: 100;
    font-style: italic;
}
input {
    height: 5rem;
}

.hline {}

.codeInput {
    width: 3rem;
    font-weight: 1000;
    font-size: 10rem;
    transition: 0.5 ease;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}



.code input:focus,
.input input:focus {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.7);
    transition: 0.5s ease-in-out;
}

.left {
    flex-direction: column;
}

form {
    display: flex;
    flex-direction: column;
}

.validationMessage {
    color: white;
    display: flex;
    justify-content: center;
}

#loginScreen {
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    height: 100vh;
}
#loginScreen>section:first-child,
#loginScreen>section:last-child {
    width: 50%;
}
#loginScreen input {
    font-size: 1.2rem;
    margin: .5em 0em;
    border-radius: var(--radius);
}
#loginScreen button {
    background-color: white;
    font-size: 1.2rem;
    height: 2em;
    border-radius: var(--radius);
}
.loginScreen {
    display: flex;
    flex-direction: column;
}

.gameScreen {
    display: grid;
    grid-template-rows: auto auto 5em 5fr;
    gap: var(--gap);
}

.player-self {
    grid-column: 1/3;
    grid-row: 1/3;
}

.player_voted {
    position: absolute;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 12;
    opacity: 1;
    backdrop-filter: none;
    bottom: 0px;
    right: 0px;
    padding: .4em;
    border-radius: 100% 100% 0% 100%;
    height: 1.5em;
    width: 1.5em;
}

.player_voted.yes {
    background: linear-gradient(to top right, rgba(25, 173, 25, 0.726), rgba(12, 122, 12, 0.699));
    color: var(--green-pastel);
}

.player_voted.no {
    background: linear-gradient(to top right, rgba(206, 27, 20, 0.726), rgba(112, 14, 8, 0.699));
    color: var(--red-pastel);
}

.animate {
    opacity: 0;
    animation: retract 1s ease-in-out 1 forwards;
}

@keyframes retract {
    0% {}
    100% {
        opacity: 1;
    }
}

.vote {
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 12;
    backdrop-filter: blur(4px);
    padding: 1em;
}

.vote h1 {
    color: var(--brown);
    font-size: 1rem;
    padding: var(--gap);
}

.vote h2 {
    font-weight: 300;
    font-size: 1em;
}

.vote h2>span {
    color: blanchedalmond;
    font-weight: 1000;
}

.vote>div {}

.vote>div>button {
    font-size: 1em;
}

.vote>div>button.liberal {
    background: linear-gradient(to top right, var(--green-jewel), var(--green-earth));
    color: var(--green-pastel);
}

.vote>div>button.fascist {
    background: linear-gradient(to top right, var(--red-jewel), var(--red-earth));
    color: var(--red-pastel);
}

button.fascist,
button.liberal {}

.vote>div>button {
    border-radius: var(--radius);
    padding: calc(var(--gap) * 4);
    margin: var(--gap);
    border: none;
    font-weight: 600;
}

button.yes {
    background: linear-gradient(to top right, var(--green-jewel), var(--green-earth));
    color: var(--green-pastel);
}

button.no {
    background: linear-gradient(to top right, var(--red-jewel), var(--red-earth));
    color: var(--red-pastel);
}

.vote>div>button:hover {
    border: solid 1px greenyellow;
    cursor: pointer;
}

.player>.vote.yes {
    background-color: rgba(102, 192, 50, 0.7);
}

.player>.vote.no {
    background-color: rgba(238, 90, 90, .70);
}

.players {
    display: grid;
    grid-template-columns: 1fr repeat(5, 1fr);
    grid-template-rows: 1fr 1fr;
    background-color: rgba(27, 27, 54, 0.466);
    gap: var(--gap);
    backdrop-filter: blur(2px);
    padding: calc(2*var(--gap));
}

.player.liberal {
    background: linear-gradient(to top left, var(--blue-fluoro), var(--blue-earth)) !important;
    animation: colorpopfas ease-in 1s forwards !important;
}

.player.fascist {
    background: linear-gradient(to top left, var(--red-pastel), var(--red-earth)) !important;
    animation: colorpoplib ease-in 1s forwards !important;
}

@keyframe colorpoplib {
    0% {
        background: linear-gradient(to top left, var(--brown-neutral), var(--brown-pastel));
    }
    100% {
        background: linear-gradient(to top left, var(--blue-fluoro), var(--blue-earth)) !important;
    }
}

@keyframe colorpopfas {
    0% {
        background: linear-gradient(to top left, var(--brown-neutral), var(--brown-pastel));
    }
    100% {
        background: linear-gradient(to top left, var(--red-pastel), var(--red-earth)) !important;
    }
}

.players>div:not(.player, .info) {
    min-height: 5rem;
    background: linear-gradient(to top left, var(--brown-neutral), var(--brown-pastel));
    backdrop-filter: blur(1px);
    -webkit-backdrop-filter: blur(1px);
    position: relative;
    overflow: hidden;
    width: 100%;
    border-radius: var(--radius);
    opacity: .2;
    border: dashed 2px var(--brown-fluoro)
}

.players>.player {
    background: linear-gradient(to top, var(--brown-neutral), var(--brown-earth));
    border-radius: var(--radius);
    backdrop-filter: blur(1px);
    min-width: auto;
    min-height: 5rem;
    border: none;
    position: relative;
    overflow: hidden;
    z-index: 10;
    transition: box-shadow 200ms ease-in-out;
}

.player:hover:not(.player-self) {
    cursor: pointer;
}

.player:hover:not(.player-self, .player.eligible, .player.eleminated) {
    box-shadow: 2px 2px 2px rgba(255, 255, 255, 0.479);
}

.choosen {
    border: solid 5px var(--light-shade);
}

.player.eligible {
    border: solid var(--light-shade);
    animation: dimInOut 1s alternate infinite ease-in-out !important;
}

.player.eleminated {
    background: linear-gradient(to bottom, var(--mid-shade), var(--light-shade));
    background-color: gray !important;
    background-image: none;
    opacity: .2;
}

.player.eleminated.player-self {
    background-image: none;
    opacity: 1 !important;
}

.player.eleminated.player-self::before {
    text-align: center;
    content: 'YOU WERE ELEMINATED';
    color: var(--red-pastel);
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    background: var(--red-jewel);
}

.player.eleminated::after {
    content: none;
}

.veto button {
    height: 4em;
    margin: 1em;
    padding: 1em;
    justify-content: center;
    align-items: center;
    display: flex;
    background: none;
    outline: none;
    border: solid 2px var(--brown-pastel);
    border-radius: 2em;
    color: white;
    font-weight: 600;
}

.veto button:hover {
    background: var(--red-jewel);
    cursor: pointer;
}

@keyframes dimInOut {
    0% {
        border: solid var(--light-shade)
    }
    50% {
        border: solid var(--green-earth)
    }
    100% {
        border: solid var(--light-shade)
    }
}

span.status {}

span.role {}

@keyframes blinker {
    50% {
        opacity: 0;
    }
}

.player>h3 {
    display: flex;
    align-items: center;
    justify-content: center;
    color: red;
    overflow: hidden;
}

.player>h2 {
    font-weight: 500;
    font-size: .9rem;
    margin: .5em;
    color: #ddd;
    z-index: 1;
}

.player.hitler::before {
    display: flex;
    justify-content: center;
    content: 'HITLER';
    position: absolute;
    background-color: var(--red-fluoro);
    opacity: .1;
    width: 100%;
    font-size: 2rem;
    font-weight: 1000;
    bottom: 0;
    transition: all 2s ease-in-out;
}

.player.offline::after {
    border: solid 2px white;
    background-color: rgb(238, 90, 90) !important;
    animation: blinker 1s ease-in-out infinite !important;
}

.player.online::after {}

.player::after {
    content: '';
    display: block;
    position: absolute;
    min-width: .75em;
    height: .75em;
    right: 0px;
    border-radius: 50%;
    margin: 5px;
    top: 0;
    background-color: rgb(144, 199, 61) !important;
}

.player.chancellor::before {
    content: 'CHANCELLOR';
    background: var(--brown-earth);
}

.player.chancellor_elect::before {
    content: 'C_ELECT';
    background: var(--brown-earth);
}

.chancellor.fascist::before,
.president.fascist::before,
.hitler.president::before,
.chancellor_elect.fascist::before {
    background-color: var(--red-earth) !important;
    opacity: .8;
}

.chancellor.liberal::before,
.president.liberal::before,
.chancellor_elect.liberal::before {
    background-color: var(--blue-fluoro) !important;
    opacity: .8;
}

.hitler.president::before {}

.player.president::before {
    content: 'PRESIDENT';
    background: var(--brown-earth);
    opacity: .8;
}

.player.president::before,
.player.chancellor::before,
.player.chancellor_elect::before {
    font-weight: 500;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: .7em;
    position: absolute;
    padding: 1em;
    height: 2em;
    bottom: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: .8;
}

.sessions {
    border: solid 1px blue;
    height: 20px;
    display: flex;
    flex-direction: row;
}

@media screen and (min-width: 769px) {
    #loginScreen {
        flex-direction: row;
        padding: 2em;
    }
    #or {
        padding: 0em 1em;
    }
    .gameScreen {
        grid-template-columns: 1fr 9fr !important;
        grid-template-rows: minmax(5em, 10%) auto auto;
        /* align-items: start; */
        /* height: 100vh; */
        grid-template-areas: "players info" "players policy" "players actionSection";
    }
    .players {
        grid-area: players;
        /* background-color: red; */
        grid-template-columns: 1fr;
        grid-template-rows: 1fr repeat(10, 1fr);
    }
    .player:not(.player-self) {
        /* width: auto; */
        grid-column: 1/2;
        /* width: 5em; */
        width: auto;
    }
    .player-self {
        grid-column: 1/2;
        /* column-span: 2; */
        grid-row: 1/3;
        /* width: 5em; */
        width: auto;
    }
    .policy {
        grid-area: policy;
    }

    .actionSection {
        grid-area: actionSection;
    }
}

@media screen and (min-width: 1025px) {
    .gameScreen {
        grid-template-columns: auto 2fr 1fr !important;
        grid-template-areas: "players info actionSection" "players policy actionSection" "players policy actionSection"
    }
    .players {
        grid-area: players;
        grid-template-columns: 1fr;
        grid-template-rows: 1fr repeat(9, 1fr);
    }
    .player:not(.player-self) {
        width: 5em;
    }
    .player-self {}
    .policy {
        grid-area: policy;
    }

    .actionSection {
        grid-area: actionSection;
    }
}